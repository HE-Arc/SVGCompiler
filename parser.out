Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    FOR
    QUOTE
    SHAPE_TYPE
    ignore

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> STATEMENT
Rule 2     PROGRAM -> STATEMENT LINE_BREAK PROGRAM
Rule 3     PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE
Rule 4     ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE
Rule 5     SHAPE_CONTENT -> CIRCLE_CONTENT
Rule 6     SHAPE_CONTENT -> TRIANGLE_CONTENT
Rule 7     SHAPE_CONTENT -> RECTANGLE_CONTENT
Rule 8     CIRCLE_CONTENT -> CIRCLE DESCRIPTION ATTRIBUTES
Rule 9     TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION ATTRIBUTES
Rule 10    RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION ATTRIBUTES
Rule 11    COLOR_VALUE -> COLOR_HEX
Rule 12    COLOR_VALUE -> RED
Rule 13    COLOR_VALUE -> GREEN
Rule 14    COLOR_VALUE -> BLUE
Rule 15    COLOR_VALUE -> YELLOW
Rule 16    COLOR_VALUE -> BLACK
Rule 17    COLOR_VALUE -> WHITE
Rule 18    ATTRIBUTES -> ATTRIBUTE SEPARATOR ATTRIBUTES
Rule 19    ATTRIBUTES -> ATTRIBUTE
Rule 20    ATTRIBUTE -> RADIUS AFFECTATION NUMBER
Rule 21    ATTRIBUTE -> POSITIONX AFFECTATION NUMBER
Rule 22    ATTRIBUTE -> POSITIONY AFFECTATION NUMBER
Rule 23    ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE
Rule 24    ATTRIBUTE -> WIDTH AFFECTATION NUMBER
Rule 25    ATTRIBUTE -> HEIGHT AFFECTATION NUMBER
Rule 26    VARIABLE -> BOOLEAN VARIABLE_NAME
Rule 27    VARIABLE -> INTEGER VARIABLE_NAME
Rule 28    VARIABLE -> SHAPE VARIABLE_NAME
Rule 29    VALUE -> ABSTRACT_SHAPE
Rule 30    VALUE -> INT_EXPRESSION
Rule 31    VALUE -> BOOL_EXPRESSION
Rule 32    STATEMENT -> VARIABLE AFFECTATION VALUE
Rule 33    STATEMENT -> DRAW ABSTRACT_SHAPE
Rule 34    STATEMENT -> IF_STATEMENTS
Rule 35    STATEMENT -> WHILE_STATEMENT
Rule 36    INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION
Rule 37    INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
Rule 38    INT_EXPRESSION -> NUMBER
Rule 39    INT_EXPRESSION -> VARIABLE
Rule 40    INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
Rule 41    INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
Rule 42    INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
Rule 43    INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
Rule 44    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION
Rule 45    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION
Rule 46    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
Rule 47    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
Rule 48    BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION
Rule 49    BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
Rule 50    BOOL_VALUE -> TRUE
Rule 51    BOOL_VALUE -> FALSE
Rule 52    BOOL_EXPRESSION -> BOOL_VALUE
Rule 53    BOOL_EXPRESSION -> VARIABLE
Rule 54    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
Rule 55    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
Rule 56    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
Rule 57    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
Rule 58    IF_STATEMENTS -> IF_STATEMENT
Rule 59    IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT
Rule 60    IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS
Rule 61    IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
Rule 62    IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
Rule 63    ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT
Rule 64    ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT
Rule 65    ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
Rule 66    ELSE_STATEMENT -> ELSE PROGRAM
Rule 67    WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

Terminals, with rules where they appear

AFFECTATION          : 20 21 22 23 24 25 32
BLACK                : 16
BLUE                 : 14
BOOLEAN              : 26
BOOL_AND             : 56
BOOL_EQUAL           : 46 54
BOOL_GT              : 45
BOOL_LT              : 44
BOOL_NOT             : 48
BOOL_NOT_EQUAL       : 47 55
BOOL_OR              : 57
BRACE_CLOSE          : 3
BRACE_OPEN           : 3
BRACKET_CLOSE        : 37 49 62 65 67
BRACKET_OPEN         : 37 49 62 65 67
CIRCLE               : 8
COLOR                : 23
COLOR_HEX            : 11
COMMENT              : 
DESCRIPTION          : 8 9 10
DRAW                 : 33
ELSE                 : 66
ELSEIF               : 65
FALSE                : 51
FOR                  : 
GREEN                : 13
HEIGHT               : 25
IF                   : 62
INTEGER              : 27
INTEGER_DIVIDE       : 43
INTEGER_MINUS        : 36 41
INTEGER_PLUS         : 40
INTEGER_TIMES        : 42
LINE_BREAK           : 2
NUMBER               : 20 21 22 24 25 38
POSITIONX            : 21
POSITIONY            : 22
QUOTE                : 
RADIUS               : 20
RECTANGLE            : 10
RED                  : 12
SEPARATOR            : 18
SHAPE                : 28
SHAPE_TYPE           : 
SQUAREBRACKET_CLOSE  : 4
SQUAREBRACKET_OPEN   : 4
TRIANGLE             : 9
TRUE                 : 50
VARIABLE_NAME        : 26 27 28
WHILE                : 67
WHITE                : 17
WIDTH                : 24
YELLOW               : 15
error                : 
ignore               : 

Nonterminals, with rules where they appear

ABSTRACT_SHAPE       : 29 33
ATTRIBUTE            : 18 19
ATTRIBUTES           : 8 9 10 18
BOOL_EXPRESSION      : 31 48 49 54 54 55 55 56 56 57 57 62 65 67
BOOL_VALUE           : 52
CIRCLE_CONTENT       : 5
COLOR_VALUE          : 23
ELSE_IF_STATEMENT    : 63 64
ELSE_IF_STATEMENTS   : 60 61 64
ELSE_STATEMENT       : 59 61
IF_STATEMENT         : 58 59 60 61
IF_STATEMENTS        : 34
INT_EXPRESSION       : 30 36 37 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47
PROGRAM              : 2 3 62 65 66 67 0
RECTANGLE_CONTENT    : 7
SHAPE_CONTENT        : 4
STATEMENT            : 1 2
TRIANGLE_CONTENT     : 6
VALUE                : 32
VARIABLE             : 32 39 53
WHILE_STATEMENT      : 35

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    PROGRAM                        shift and go to state 1
    STATEMENT                      shift and go to state 2
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> STATEMENT .
    (2) PROGRAM -> STATEMENT . LINE_BREAK PROGRAM

  ! shift/reduce conflict for LINE_BREAK resolved as shift
    $end            reduce using rule 1 (PROGRAM -> STATEMENT .)
    BRACE_CLOSE     reduce using rule 1 (PROGRAM -> STATEMENT .)
    ELSE            reduce using rule 1 (PROGRAM -> STATEMENT .)
    ELSEIF          reduce using rule 1 (PROGRAM -> STATEMENT .)
    LINE_BREAK      shift and go to state 14

  ! LINE_BREAK      [ reduce using rule 1 (PROGRAM -> STATEMENT .) ]


state 3

    (3) PROGRAM -> BRACE_OPEN . PROGRAM BRACE_CLOSE
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    PROGRAM                        shift and go to state 15
    STATEMENT                      shift and go to state 2
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 4

    (32) STATEMENT -> VARIABLE . AFFECTATION VALUE

    AFFECTATION     shift and go to state 16


state 5

    (33) STATEMENT -> DRAW . ABSTRACT_SHAPE
    (4) ABSTRACT_SHAPE -> . SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE

    SQUAREBRACKET_OPEN shift and go to state 18

    ABSTRACT_SHAPE                 shift and go to state 17

state 6

    (34) STATEMENT -> IF_STATEMENTS .

    LINE_BREAK      reduce using rule 34 (STATEMENT -> IF_STATEMENTS .)
    $end            reduce using rule 34 (STATEMENT -> IF_STATEMENTS .)
    BRACE_CLOSE     reduce using rule 34 (STATEMENT -> IF_STATEMENTS .)
    ELSE            reduce using rule 34 (STATEMENT -> IF_STATEMENTS .)
    ELSEIF          reduce using rule 34 (STATEMENT -> IF_STATEMENTS .)


state 7

    (35) STATEMENT -> WHILE_STATEMENT .

    LINE_BREAK      reduce using rule 35 (STATEMENT -> WHILE_STATEMENT .)
    $end            reduce using rule 35 (STATEMENT -> WHILE_STATEMENT .)
    BRACE_CLOSE     reduce using rule 35 (STATEMENT -> WHILE_STATEMENT .)
    ELSE            reduce using rule 35 (STATEMENT -> WHILE_STATEMENT .)
    ELSEIF          reduce using rule 35 (STATEMENT -> WHILE_STATEMENT .)


state 8

    (26) VARIABLE -> BOOLEAN . VARIABLE_NAME

    VARIABLE_NAME   shift and go to state 19


state 9

    (27) VARIABLE -> INTEGER . VARIABLE_NAME

    VARIABLE_NAME   shift and go to state 20


state 10

    (28) VARIABLE -> SHAPE . VARIABLE_NAME

    VARIABLE_NAME   shift and go to state 21


state 11

    (58) IF_STATEMENTS -> IF_STATEMENT .
    (59) IF_STATEMENTS -> IF_STATEMENT . ELSE_STATEMENT
    (60) IF_STATEMENTS -> IF_STATEMENT . ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> IF_STATEMENT . ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) ELSE_STATEMENT -> . ELSE PROGRAM
    (63) ELSE_IF_STATEMENTS -> . ELSE_IF_STATEMENT
    (64) ELSE_IF_STATEMENTS -> . ELSE_IF_STATEMENTS ELSE_IF_STATEMENT
    (65) ELSE_IF_STATEMENT -> . ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    LINE_BREAK      reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT .)
    $end            reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT .)
    BRACE_CLOSE     reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT .)
    ELSE            shift and go to state 24
    ELSEIF          shift and go to state 26

  ! ELSE            [ reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT .) ]
  ! ELSEIF          [ reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT .) ]

    ELSE_STATEMENT                 shift and go to state 22
    ELSE_IF_STATEMENTS             shift and go to state 23
    ELSE_IF_STATEMENT              shift and go to state 25

state 12

    (67) WHILE_STATEMENT -> WHILE . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACKET_OPEN    shift and go to state 27


state 13

    (62) IF_STATEMENT -> IF . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACKET_OPEN    shift and go to state 28


state 14

    (2) PROGRAM -> STATEMENT LINE_BREAK . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    STATEMENT                      shift and go to state 2
    PROGRAM                        shift and go to state 29
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 15

    (3) PROGRAM -> BRACE_OPEN PROGRAM . BRACE_CLOSE

    BRACE_CLOSE     shift and go to state 30


state 16

    (32) STATEMENT -> VARIABLE AFFECTATION . VALUE
    (29) VALUE -> . ABSTRACT_SHAPE
    (30) VALUE -> . INT_EXPRESSION
    (31) VALUE -> . BOOL_EXPRESSION
    (4) ABSTRACT_SHAPE -> . SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE

    SQUAREBRACKET_OPEN shift and go to state 18
    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 37
    NUMBER          shift and go to state 38
    BOOL_NOT        shift and go to state 39
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    VARIABLE                       shift and go to state 31
    VALUE                          shift and go to state 32
    ABSTRACT_SHAPE                 shift and go to state 33
    INT_EXPRESSION                 shift and go to state 34
    BOOL_EXPRESSION                shift and go to state 35
    BOOL_VALUE                     shift and go to state 40

state 17

    (33) STATEMENT -> DRAW ABSTRACT_SHAPE .

    LINE_BREAK      reduce using rule 33 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    $end            reduce using rule 33 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    BRACE_CLOSE     reduce using rule 33 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    ELSE            reduce using rule 33 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    ELSEIF          reduce using rule 33 (STATEMENT -> DRAW ABSTRACT_SHAPE .)


state 18

    (4) ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN . SHAPE_CONTENT SQUAREBRACKET_CLOSE
    (5) SHAPE_CONTENT -> . CIRCLE_CONTENT
    (6) SHAPE_CONTENT -> . TRIANGLE_CONTENT
    (7) SHAPE_CONTENT -> . RECTANGLE_CONTENT
    (8) CIRCLE_CONTENT -> . CIRCLE DESCRIPTION ATTRIBUTES
    (9) TRIANGLE_CONTENT -> . TRIANGLE DESCRIPTION ATTRIBUTES
    (10) RECTANGLE_CONTENT -> . RECTANGLE DESCRIPTION ATTRIBUTES

    CIRCLE          shift and go to state 47
    TRIANGLE        shift and go to state 48
    RECTANGLE       shift and go to state 49

    SHAPE_CONTENT                  shift and go to state 43
    CIRCLE_CONTENT                 shift and go to state 44
    TRIANGLE_CONTENT               shift and go to state 45
    RECTANGLE_CONTENT              shift and go to state 46

state 19

    (26) VARIABLE -> BOOLEAN VARIABLE_NAME .

    AFFECTATION     reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_PLUS    reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_MINUS   reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_TIMES   reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_DIVIDE  reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_LT         reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_GT         reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_EQUAL      reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_NOT_EQUAL  reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    LINE_BREAK      reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    $end            reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BRACE_CLOSE     reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    ELSE            reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    ELSEIF          reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_AND        reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_OR         reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BRACKET_CLOSE   reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)


state 20

    (27) VARIABLE -> INTEGER VARIABLE_NAME .

    AFFECTATION     reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_PLUS    reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_MINUS   reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_TIMES   reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_DIVIDE  reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_LT         reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_GT         reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_EQUAL      reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_NOT_EQUAL  reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    LINE_BREAK      reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    $end            reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BRACE_CLOSE     reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    ELSE            reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    ELSEIF          reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_AND        reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_OR         reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BRACKET_CLOSE   reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)


state 21

    (28) VARIABLE -> SHAPE VARIABLE_NAME .

    AFFECTATION     reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_PLUS    reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_MINUS   reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_TIMES   reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_DIVIDE  reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_LT         reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_GT         reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_EQUAL      reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_NOT_EQUAL  reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    LINE_BREAK      reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    $end            reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BRACE_CLOSE     reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    ELSE            reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    ELSEIF          reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_AND        reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_OR         reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BRACKET_CLOSE   reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)


state 22

    (59) IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .

    LINE_BREAK      reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    $end            reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    BRACE_CLOSE     reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    ELSE            reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    ELSEIF          reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)


state 23

    (60) IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .
    (61) IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS . ELSE_STATEMENT
    (64) ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS . ELSE_IF_STATEMENT
    (66) ELSE_STATEMENT -> . ELSE PROGRAM
    (65) ELSE_IF_STATEMENT -> . ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    LINE_BREAK      reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .)
    $end            reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .)
    BRACE_CLOSE     reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .)
    ELSE            shift and go to state 24
    ELSEIF          shift and go to state 26

  ! ELSE            [ reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .) ]
  ! ELSEIF          [ reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .) ]

    ELSE_STATEMENT                 shift and go to state 50
    ELSE_IF_STATEMENT              shift and go to state 51

state 24

    (66) ELSE_STATEMENT -> ELSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    PROGRAM                        shift and go to state 52
    STATEMENT                      shift and go to state 2
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 25

    (63) ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .

    LINE_BREAK      reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    $end            reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    BRACE_CLOSE     reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    ELSE            reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    ELSEIF          reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)


state 26

    (65) ELSE_IF_STATEMENT -> ELSEIF . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACKET_OPEN    shift and go to state 53


state 27

    (67) WHILE_STATEMENT -> WHILE BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 55
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 28

    (62) IF_STATEMENT -> IF BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 58
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 29

    (2) PROGRAM -> STATEMENT LINE_BREAK PROGRAM .

    $end            reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    BRACE_CLOSE     reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    LINE_BREAK      reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    ELSE            reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    ELSEIF          reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)


state 30

    (3) PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .

    $end            reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    BRACE_CLOSE     reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    LINE_BREAK      reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    ELSE            reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    ELSEIF          reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)


state 31

    (39) INT_EXPRESSION -> VARIABLE .
    (53) BOOL_EXPRESSION -> VARIABLE .

  ! reduce/reduce conflict for BOOL_EQUAL resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BOOL_NOT_EQUAL resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for LINE_BREAK resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BRACE_CLOSE resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BRACKET_CLOSE resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_PLUS    reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_MINUS   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_TIMES   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_DIVIDE  reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_LT         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_GT         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_EQUAL      reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_NOT_EQUAL  reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    LINE_BREAK      reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    $end            reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BRACE_CLOSE     reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    ELSE            reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    ELSEIF          reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BRACKET_CLOSE   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_AND        reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    BOOL_OR         reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)

  ! BOOL_EQUAL      [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! LINE_BREAK      [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! $end            [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BRACE_CLOSE     [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BRACKET_CLOSE   [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]


state 32

    (32) STATEMENT -> VARIABLE AFFECTATION VALUE .

    LINE_BREAK      reduce using rule 32 (STATEMENT -> VARIABLE AFFECTATION VALUE .)
    $end            reduce using rule 32 (STATEMENT -> VARIABLE AFFECTATION VALUE .)
    BRACE_CLOSE     reduce using rule 32 (STATEMENT -> VARIABLE AFFECTATION VALUE .)
    ELSE            reduce using rule 32 (STATEMENT -> VARIABLE AFFECTATION VALUE .)
    ELSEIF          reduce using rule 32 (STATEMENT -> VARIABLE AFFECTATION VALUE .)


state 33

    (29) VALUE -> ABSTRACT_SHAPE .

    LINE_BREAK      reduce using rule 29 (VALUE -> ABSTRACT_SHAPE .)
    $end            reduce using rule 29 (VALUE -> ABSTRACT_SHAPE .)
    BRACE_CLOSE     reduce using rule 29 (VALUE -> ABSTRACT_SHAPE .)
    ELSE            reduce using rule 29 (VALUE -> ABSTRACT_SHAPE .)
    ELSEIF          reduce using rule 29 (VALUE -> ABSTRACT_SHAPE .)


state 34

    (30) VALUE -> INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION
    (44) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_NOT_EQUAL INT_EXPRESSION

    LINE_BREAK      reduce using rule 30 (VALUE -> INT_EXPRESSION .)
    $end            reduce using rule 30 (VALUE -> INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 30 (VALUE -> INT_EXPRESSION .)
    ELSE            reduce using rule 30 (VALUE -> INT_EXPRESSION .)
    ELSEIF          reduce using rule 30 (VALUE -> INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62
    BOOL_LT         shift and go to state 63
    BOOL_GT         shift and go to state 64
    BOOL_EQUAL      shift and go to state 65
    BOOL_NOT_EQUAL  shift and go to state 66


state 35

    (31) VALUE -> BOOL_EXPRESSION .
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    LINE_BREAK      reduce using rule 31 (VALUE -> BOOL_EXPRESSION .)
    $end            reduce using rule 31 (VALUE -> BOOL_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 31 (VALUE -> BOOL_EXPRESSION .)
    ELSE            reduce using rule 31 (VALUE -> BOOL_EXPRESSION .)
    ELSEIF          reduce using rule 31 (VALUE -> BOOL_EXPRESSION .)
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68
    BOOL_AND        shift and go to state 69
    BOOL_OR         shift and go to state 70


state 36

    (36) INT_EXPRESSION -> INTEGER_MINUS . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 71
    VARIABLE                       shift and go to state 73

state 37

    (37) INT_EXPRESSION -> BRACKET_OPEN . INT_EXPRESSION BRACKET_CLOSE
    (49) BOOL_EXPRESSION -> BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 37
    NUMBER          shift and go to state 38
    BOOL_NOT        shift and go to state 39
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    INT_EXPRESSION                 shift and go to state 74
    BOOL_EXPRESSION                shift and go to state 75
    VARIABLE                       shift and go to state 31
    BOOL_VALUE                     shift and go to state 40

state 38

    (38) INT_EXPRESSION -> NUMBER .

    INTEGER_PLUS    reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    INTEGER_MINUS   reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    INTEGER_TIMES   reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    INTEGER_DIVIDE  reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BOOL_LT         reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BOOL_GT         reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BOOL_EQUAL      reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BOOL_NOT_EQUAL  reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    LINE_BREAK      reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    $end            reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BRACE_CLOSE     reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    ELSE            reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    ELSEIF          reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BRACKET_CLOSE   reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BOOL_AND        reduce using rule 38 (INT_EXPRESSION -> NUMBER .)
    BOOL_OR         reduce using rule 38 (INT_EXPRESSION -> NUMBER .)


state 39

    (48) BOOL_EXPRESSION -> BOOL_NOT . BOOL_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 76
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 40

    (52) BOOL_EXPRESSION -> BOOL_VALUE .

    BOOL_EQUAL      reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_NOT_EQUAL  reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_AND        reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_OR         reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    LINE_BREAK      reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    $end            reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BRACE_CLOSE     reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    ELSE            reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    ELSEIF          reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BRACKET_CLOSE   reduce using rule 52 (BOOL_EXPRESSION -> BOOL_VALUE .)


state 41

    (50) BOOL_VALUE -> TRUE .

    BOOL_EQUAL      reduce using rule 50 (BOOL_VALUE -> TRUE .)
    BOOL_NOT_EQUAL  reduce using rule 50 (BOOL_VALUE -> TRUE .)
    BOOL_AND        reduce using rule 50 (BOOL_VALUE -> TRUE .)
    BOOL_OR         reduce using rule 50 (BOOL_VALUE -> TRUE .)
    LINE_BREAK      reduce using rule 50 (BOOL_VALUE -> TRUE .)
    $end            reduce using rule 50 (BOOL_VALUE -> TRUE .)
    BRACE_CLOSE     reduce using rule 50 (BOOL_VALUE -> TRUE .)
    ELSE            reduce using rule 50 (BOOL_VALUE -> TRUE .)
    ELSEIF          reduce using rule 50 (BOOL_VALUE -> TRUE .)
    BRACKET_CLOSE   reduce using rule 50 (BOOL_VALUE -> TRUE .)


state 42

    (51) BOOL_VALUE -> FALSE .

    BOOL_EQUAL      reduce using rule 51 (BOOL_VALUE -> FALSE .)
    BOOL_NOT_EQUAL  reduce using rule 51 (BOOL_VALUE -> FALSE .)
    BOOL_AND        reduce using rule 51 (BOOL_VALUE -> FALSE .)
    BOOL_OR         reduce using rule 51 (BOOL_VALUE -> FALSE .)
    LINE_BREAK      reduce using rule 51 (BOOL_VALUE -> FALSE .)
    $end            reduce using rule 51 (BOOL_VALUE -> FALSE .)
    BRACE_CLOSE     reduce using rule 51 (BOOL_VALUE -> FALSE .)
    ELSE            reduce using rule 51 (BOOL_VALUE -> FALSE .)
    ELSEIF          reduce using rule 51 (BOOL_VALUE -> FALSE .)
    BRACKET_CLOSE   reduce using rule 51 (BOOL_VALUE -> FALSE .)


state 43

    (4) ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT . SQUAREBRACKET_CLOSE

    SQUAREBRACKET_CLOSE shift and go to state 77


state 44

    (5) SHAPE_CONTENT -> CIRCLE_CONTENT .

    SQUAREBRACKET_CLOSE reduce using rule 5 (SHAPE_CONTENT -> CIRCLE_CONTENT .)


state 45

    (6) SHAPE_CONTENT -> TRIANGLE_CONTENT .

    SQUAREBRACKET_CLOSE reduce using rule 6 (SHAPE_CONTENT -> TRIANGLE_CONTENT .)


state 46

    (7) SHAPE_CONTENT -> RECTANGLE_CONTENT .

    SQUAREBRACKET_CLOSE reduce using rule 7 (SHAPE_CONTENT -> RECTANGLE_CONTENT .)


state 47

    (8) CIRCLE_CONTENT -> CIRCLE . DESCRIPTION ATTRIBUTES

    DESCRIPTION     shift and go to state 78


state 48

    (9) TRIANGLE_CONTENT -> TRIANGLE . DESCRIPTION ATTRIBUTES

    DESCRIPTION     shift and go to state 79


state 49

    (10) RECTANGLE_CONTENT -> RECTANGLE . DESCRIPTION ATTRIBUTES

    DESCRIPTION     shift and go to state 80


state 50

    (61) IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .

    LINE_BREAK      reduce using rule 61 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    $end            reduce using rule 61 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    BRACE_CLOSE     reduce using rule 61 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    ELSE            reduce using rule 61 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    ELSEIF          reduce using rule 61 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)


state 51

    (64) ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .

    LINE_BREAK      reduce using rule 64 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    $end            reduce using rule 64 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    BRACE_CLOSE     reduce using rule 64 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    ELSE            reduce using rule 64 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    ELSEIF          reduce using rule 64 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)


state 52

    (66) ELSE_STATEMENT -> ELSE PROGRAM .

    LINE_BREAK      reduce using rule 66 (ELSE_STATEMENT -> ELSE PROGRAM .)
    $end            reduce using rule 66 (ELSE_STATEMENT -> ELSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 66 (ELSE_STATEMENT -> ELSE PROGRAM .)
    ELSE            reduce using rule 66 (ELSE_STATEMENT -> ELSE PROGRAM .)
    ELSEIF          reduce using rule 66 (ELSE_STATEMENT -> ELSE PROGRAM .)


state 53

    (65) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 81
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 54

    (49) BOOL_EXPRESSION -> BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> BRACKET_OPEN . INT_EXPRESSION BRACKET_CLOSE
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 75
    INT_EXPRESSION                 shift and go to state 82
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 55

    (67) WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE PROGRAM
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 83
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68
    BOOL_AND        shift and go to state 69
    BOOL_OR         shift and go to state 70


state 56

    (44) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_NOT_EQUAL INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         shift and go to state 63
    BOOL_GT         shift and go to state 64
    BOOL_EQUAL      shift and go to state 65
    BOOL_NOT_EQUAL  shift and go to state 66
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 57

    (53) BOOL_EXPRESSION -> VARIABLE .
    (39) INT_EXPRESSION -> VARIABLE .

  ! reduce/reduce conflict for BOOL_EQUAL resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BOOL_NOT_EQUAL resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BRACKET_CLOSE resolved using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_AND        reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    BOOL_OR         reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    LINE_BREAK      reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    $end            reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    BRACE_CLOSE     reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    ELSE            reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    ELSEIF          reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .)
    BOOL_LT         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_GT         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_EQUAL      reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_NOT_EQUAL  reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_PLUS    reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_MINUS   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_TIMES   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_DIVIDE  reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BRACKET_CLOSE   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)

  ! BRACKET_CLOSE   [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BOOL_EQUAL      [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 53 (BOOL_EXPRESSION -> VARIABLE .) ]


state 58

    (62) IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE PROGRAM
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 84
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68
    BOOL_AND        shift and go to state 69
    BOOL_OR         shift and go to state 70


state 59

    (40) INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 85
    VARIABLE                       shift and go to state 73

state 60

    (41) INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 86
    VARIABLE                       shift and go to state 73

state 61

    (42) INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 87
    VARIABLE                       shift and go to state 73

state 62

    (43) INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 88
    VARIABLE                       shift and go to state 73

state 63

    (44) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 89
    VARIABLE                       shift and go to state 73

state 64

    (45) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 90
    VARIABLE                       shift and go to state 73

state 65

    (46) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 91
    VARIABLE                       shift and go to state 73

state 66

    (47) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL . INT_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 92
    VARIABLE                       shift and go to state 73

state 67

    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL . BOOL_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 93
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 68

    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL . BOOL_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 94
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 69

    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND . BOOL_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 95
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 70

    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR . BOOL_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (48) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (49) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (52) BOOL_EXPRESSION -> . BOOL_VALUE
    (53) BOOL_EXPRESSION -> . VARIABLE
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (50) BOOL_VALUE -> . TRUE
    (51) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 39
    BRACKET_OPEN    shift and go to state 54
    INTEGER_MINUS   shift and go to state 36
    NUMBER          shift and go to state 38
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    BOOL_EXPRESSION                shift and go to state 96
    INT_EXPRESSION                 shift and go to state 56
    BOOL_VALUE                     shift and go to state 40
    VARIABLE                       shift and go to state 57

state 71

    (36) INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    INTEGER_PLUS    reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_TIMES   reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_DIVIDE  reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_LT         reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_GT         reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    $end            reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    ELSE            reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    ELSEIF          reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_AND        reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_OR         reduce using rule 36 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)

  ! INTEGER_PLUS    [ shift and go to state 59 ]
  ! INTEGER_MINUS   [ shift and go to state 60 ]
  ! INTEGER_TIMES   [ shift and go to state 61 ]
  ! INTEGER_DIVIDE  [ shift and go to state 62 ]


state 72

    (37) INT_EXPRESSION -> BRACKET_OPEN . INT_EXPRESSION BRACKET_CLOSE
    (36) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (37) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (38) INT_EXPRESSION -> . NUMBER
    (39) INT_EXPRESSION -> . VARIABLE
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 36
    BRACKET_OPEN    shift and go to state 72
    NUMBER          shift and go to state 38
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10

    INT_EXPRESSION                 shift and go to state 97
    VARIABLE                       shift and go to state 73

state 73

    (39) INT_EXPRESSION -> VARIABLE .

    INTEGER_PLUS    reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_MINUS   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_TIMES   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_DIVIDE  reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_LT         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_GT         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_EQUAL      reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_NOT_EQUAL  reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    LINE_BREAK      reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    $end            reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BRACE_CLOSE     reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    ELSE            reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    ELSEIF          reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BRACKET_CLOSE   reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_AND        reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)
    BOOL_OR         reduce using rule 39 (INT_EXPRESSION -> VARIABLE .)


state 74

    (37) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION . BRACKET_CLOSE
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION
    (44) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_NOT_EQUAL INT_EXPRESSION

    BRACKET_CLOSE   shift and go to state 98
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62
    BOOL_LT         shift and go to state 63
    BOOL_GT         shift and go to state 64
    BOOL_EQUAL      shift and go to state 65
    BOOL_NOT_EQUAL  shift and go to state 66


state 75

    (49) BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 99
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68
    BOOL_AND        shift and go to state 69
    BOOL_OR         shift and go to state 70


state 76

    (48) BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BOOL_EQUAL      reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    LINE_BREAK      reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    $end            reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    ELSE            reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    ELSEIF          reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 48 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)

  ! BOOL_EQUAL      [ shift and go to state 67 ]
  ! BOOL_NOT_EQUAL  [ shift and go to state 68 ]
  ! BOOL_AND        [ shift and go to state 69 ]
  ! BOOL_OR         [ shift and go to state 70 ]


state 77

    (4) ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .

    LINE_BREAK      reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    $end            reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    BRACE_CLOSE     reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    ELSE            reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    ELSEIF          reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)


state 78

    (8) CIRCLE_CONTENT -> CIRCLE DESCRIPTION . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (19) ATTRIBUTES -> . ATTRIBUTE
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 102
    POSITIONX       shift and go to state 103
    POSITIONY       shift and go to state 104
    COLOR           shift and go to state 105
    WIDTH           shift and go to state 106
    HEIGHT          shift and go to state 107

    ATTRIBUTES                     shift and go to state 100
    ATTRIBUTE                      shift and go to state 101

state 79

    (9) TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (19) ATTRIBUTES -> . ATTRIBUTE
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 102
    POSITIONX       shift and go to state 103
    POSITIONY       shift and go to state 104
    COLOR           shift and go to state 105
    WIDTH           shift and go to state 106
    HEIGHT          shift and go to state 107

    ATTRIBUTES                     shift and go to state 108
    ATTRIBUTE                      shift and go to state 101

state 80

    (10) RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (19) ATTRIBUTES -> . ATTRIBUTE
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 102
    POSITIONX       shift and go to state 103
    POSITIONY       shift and go to state 104
    COLOR           shift and go to state 105
    WIDTH           shift and go to state 106
    HEIGHT          shift and go to state 107

    ATTRIBUTES                     shift and go to state 109
    ATTRIBUTE                      shift and go to state 101

state 81

    (65) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE PROGRAM
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 110
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68
    BOOL_AND        shift and go to state 69
    BOOL_OR         shift and go to state 70


state 82

    (37) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION . BRACKET_CLOSE
    (44) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_LT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_GT INT_EXPRESSION
    (46) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_NOT_EQUAL INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   shift and go to state 98
    BOOL_LT         shift and go to state 63
    BOOL_GT         shift and go to state 64
    BOOL_EQUAL      shift and go to state 65
    BOOL_NOT_EQUAL  shift and go to state 66
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 83

    (67) WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    PROGRAM                        shift and go to state 111
    STATEMENT                      shift and go to state 2
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 84

    (62) IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    PROGRAM                        shift and go to state 112
    STATEMENT                      shift and go to state 2
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 85

    (40) INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    INTEGER_PLUS    reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_LT         reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_GT         reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    $end            reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    ELSE            reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    ELSEIF          reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_AND        reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_OR         reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62

  ! INTEGER_TIMES   [ reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .) ]
  ! INTEGER_PLUS    [ shift and go to state 59 ]
  ! INTEGER_MINUS   [ shift and go to state 60 ]


state 86

    (41) INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    INTEGER_MINUS   reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_LT         reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_GT         reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    $end            reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    ELSE            reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    ELSEIF          reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_AND        reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_OR         reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 59
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62

  ! INTEGER_PLUS    [ reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .) ]
  ! INTEGER_TIMES   [ reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .) ]
  ! INTEGER_MINUS   [ shift and go to state 60 ]


state 87

    (42) INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    INTEGER_PLUS    reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_TIMES   reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_DIVIDE  reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_LT         reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_GT         reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    $end            reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    ELSE            reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    ELSEIF          reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_AND        reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_OR         reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)

  ! INTEGER_PLUS    [ shift and go to state 59 ]
  ! INTEGER_MINUS   [ shift and go to state 60 ]
  ! INTEGER_TIMES   [ shift and go to state 61 ]
  ! INTEGER_DIVIDE  [ shift and go to state 62 ]


state 88

    (43) INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    INTEGER_PLUS    reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_DIVIDE  reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_LT         reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_GT         reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    $end            reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    ELSE            reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    ELSEIF          reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_AND        reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_OR         reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_TIMES   shift and go to state 61

  ! INTEGER_TIMES   [ reduce using rule 43 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .) ]
  ! INTEGER_PLUS    [ shift and go to state 59 ]
  ! INTEGER_MINUS   [ shift and go to state 60 ]
  ! INTEGER_DIVIDE  [ shift and go to state 62 ]


state 89

    (44) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_EQUAL      reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_AND        reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_OR         reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    $end            reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    ELSE            reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    ELSEIF          reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 90

    (45) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_EQUAL      reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_AND        reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_OR         reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    $end            reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    ELSE            reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    ELSEIF          reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 91

    (46) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_EQUAL      reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_AND        reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_OR         reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    $end            reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    ELSE            reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    ELSEIF          reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 92

    (47) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_EQUAL      reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_AND        reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_OR         reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    LINE_BREAK      reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    $end            reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    ELSE            reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    ELSEIF          reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 47 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 93

    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BOOL_EQUAL      reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    LINE_BREAK      reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    $end            reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    ELSE            reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    ELSEIF          reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_NOT_EQUAL  shift and go to state 68

  ! BOOL_NOT_EQUAL  [ reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .) ]
  ! BOOL_EQUAL      [ shift and go to state 67 ]
  ! BOOL_AND        [ shift and go to state 69 ]
  ! BOOL_OR         [ shift and go to state 70 ]


state 94

    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BOOL_EQUAL      reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    LINE_BREAK      reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    $end            reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    ELSE            reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    ELSEIF          reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)

  ! BOOL_EQUAL      [ shift and go to state 67 ]
  ! BOOL_NOT_EQUAL  [ shift and go to state 68 ]
  ! BOOL_AND        [ shift and go to state 69 ]
  ! BOOL_OR         [ shift and go to state 70 ]


state 95

    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BOOL_AND        reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    LINE_BREAK      reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    $end            reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    ELSE            reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    ELSEIF          reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68

  ! BOOL_EQUAL      [ reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .) ]
  ! BOOL_AND        [ shift and go to state 69 ]
  ! BOOL_OR         [ shift and go to state 70 ]


state 96

    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (57) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BOOL_OR         reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    LINE_BREAK      reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    $end            reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    BRACE_CLOSE     reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    ELSE            reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    ELSEIF          reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    BOOL_EQUAL      shift and go to state 67
    BOOL_NOT_EQUAL  shift and go to state 68
    BOOL_AND        shift and go to state 69

  ! BOOL_EQUAL      [ reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .) ]
  ! BOOL_AND        [ reduce using rule 57 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .) ]
  ! BOOL_OR         [ shift and go to state 70 ]


state 97

    (37) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION . BRACKET_CLOSE
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (43) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   shift and go to state 98
    INTEGER_PLUS    shift and go to state 59
    INTEGER_MINUS   shift and go to state 60
    INTEGER_TIMES   shift and go to state 61
    INTEGER_DIVIDE  shift and go to state 62


state 98

    (37) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .

    INTEGER_PLUS    reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_MINUS   reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_TIMES   reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_DIVIDE  reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_LT         reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_GT         reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_EQUAL      reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_NOT_EQUAL  reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    LINE_BREAK      reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    $end            reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BRACE_CLOSE     reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    ELSE            reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    ELSEIF          reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BRACKET_CLOSE   reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_AND        reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_OR         reduce using rule 37 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)


state 99

    (49) BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .

    BOOL_EQUAL      reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_NOT_EQUAL  reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_AND        reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_OR         reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    LINE_BREAK      reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    $end            reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BRACE_CLOSE     reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    ELSE            reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    ELSEIF          reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BRACKET_CLOSE   reduce using rule 49 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)


state 100

    (8) CIRCLE_CONTENT -> CIRCLE DESCRIPTION ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 8 (CIRCLE_CONTENT -> CIRCLE DESCRIPTION ATTRIBUTES .)


state 101

    (18) ATTRIBUTES -> ATTRIBUTE . SEPARATOR ATTRIBUTES
    (19) ATTRIBUTES -> ATTRIBUTE .

    SEPARATOR       shift and go to state 113
    SQUAREBRACKET_CLOSE reduce using rule 19 (ATTRIBUTES -> ATTRIBUTE .)


state 102

    (20) ATTRIBUTE -> RADIUS . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 114


state 103

    (21) ATTRIBUTE -> POSITIONX . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 115


state 104

    (22) ATTRIBUTE -> POSITIONY . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 116


state 105

    (23) ATTRIBUTE -> COLOR . AFFECTATION COLOR_VALUE

    AFFECTATION     shift and go to state 117


state 106

    (24) ATTRIBUTE -> WIDTH . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 118


state 107

    (25) ATTRIBUTE -> HEIGHT . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 119


state 108

    (9) TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 9 (TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION ATTRIBUTES .)


state 109

    (10) RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 10 (RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION ATTRIBUTES .)


state 110

    (65) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . VARIABLE AFFECTATION VALUE
    (33) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (34) STATEMENT -> . IF_STATEMENTS
    (35) STATEMENT -> . WHILE_STATEMENT
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME
    (58) IF_STATEMENTS -> . IF_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (61) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (67) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (62) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 5
    BOOLEAN         shift and go to state 8
    INTEGER         shift and go to state 9
    SHAPE           shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13

    PROGRAM                        shift and go to state 120
    STATEMENT                      shift and go to state 2
    VARIABLE                       shift and go to state 4
    IF_STATEMENTS                  shift and go to state 6
    WHILE_STATEMENT                shift and go to state 7
    IF_STATEMENT                   shift and go to state 11

state 111

    (67) WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .

    LINE_BREAK      reduce using rule 67 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    $end            reduce using rule 67 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 67 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSE            reduce using rule 67 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSEIF          reduce using rule 67 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)


state 112

    (62) IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .

    ELSE            reduce using rule 62 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSEIF          reduce using rule 62 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    LINE_BREAK      reduce using rule 62 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    $end            reduce using rule 62 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 62 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)


state 113

    (18) ATTRIBUTES -> ATTRIBUTE SEPARATOR . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (19) ATTRIBUTES -> . ATTRIBUTE
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 102
    POSITIONX       shift and go to state 103
    POSITIONY       shift and go to state 104
    COLOR           shift and go to state 105
    WIDTH           shift and go to state 106
    HEIGHT          shift and go to state 107

    ATTRIBUTE                      shift and go to state 101
    ATTRIBUTES                     shift and go to state 121

state 114

    (20) ATTRIBUTE -> RADIUS AFFECTATION . NUMBER

    NUMBER          shift and go to state 122


state 115

    (21) ATTRIBUTE -> POSITIONX AFFECTATION . NUMBER

    NUMBER          shift and go to state 123


state 116

    (22) ATTRIBUTE -> POSITIONY AFFECTATION . NUMBER

    NUMBER          shift and go to state 124


state 117

    (23) ATTRIBUTE -> COLOR AFFECTATION . COLOR_VALUE
    (11) COLOR_VALUE -> . COLOR_HEX
    (12) COLOR_VALUE -> . RED
    (13) COLOR_VALUE -> . GREEN
    (14) COLOR_VALUE -> . BLUE
    (15) COLOR_VALUE -> . YELLOW
    (16) COLOR_VALUE -> . BLACK
    (17) COLOR_VALUE -> . WHITE

    COLOR_HEX       shift and go to state 126
    RED             shift and go to state 127
    GREEN           shift and go to state 128
    BLUE            shift and go to state 129
    YELLOW          shift and go to state 130
    BLACK           shift and go to state 131
    WHITE           shift and go to state 132

    COLOR_VALUE                    shift and go to state 125

state 118

    (24) ATTRIBUTE -> WIDTH AFFECTATION . NUMBER

    NUMBER          shift and go to state 133


state 119

    (25) ATTRIBUTE -> HEIGHT AFFECTATION . NUMBER

    NUMBER          shift and go to state 134


state 120

    (65) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .

    LINE_BREAK      reduce using rule 65 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    $end            reduce using rule 65 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 65 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSE            reduce using rule 65 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSEIF          reduce using rule 65 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)


state 121

    (18) ATTRIBUTES -> ATTRIBUTE SEPARATOR ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 18 (ATTRIBUTES -> ATTRIBUTE SEPARATOR ATTRIBUTES .)


state 122

    (20) ATTRIBUTE -> RADIUS AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 20 (ATTRIBUTE -> RADIUS AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 20 (ATTRIBUTE -> RADIUS AFFECTATION NUMBER .)


state 123

    (21) ATTRIBUTE -> POSITIONX AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 21 (ATTRIBUTE -> POSITIONX AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 21 (ATTRIBUTE -> POSITIONX AFFECTATION NUMBER .)


state 124

    (22) ATTRIBUTE -> POSITIONY AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 22 (ATTRIBUTE -> POSITIONY AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 22 (ATTRIBUTE -> POSITIONY AFFECTATION NUMBER .)


state 125

    (23) ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE .

    SEPARATOR       reduce using rule 23 (ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE .)
    SQUAREBRACKET_CLOSE reduce using rule 23 (ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE .)


state 126

    (11) COLOR_VALUE -> COLOR_HEX .

    SEPARATOR       reduce using rule 11 (COLOR_VALUE -> COLOR_HEX .)
    SQUAREBRACKET_CLOSE reduce using rule 11 (COLOR_VALUE -> COLOR_HEX .)


state 127

    (12) COLOR_VALUE -> RED .

    SEPARATOR       reduce using rule 12 (COLOR_VALUE -> RED .)
    SQUAREBRACKET_CLOSE reduce using rule 12 (COLOR_VALUE -> RED .)


state 128

    (13) COLOR_VALUE -> GREEN .

    SEPARATOR       reduce using rule 13 (COLOR_VALUE -> GREEN .)
    SQUAREBRACKET_CLOSE reduce using rule 13 (COLOR_VALUE -> GREEN .)


state 129

    (14) COLOR_VALUE -> BLUE .

    SEPARATOR       reduce using rule 14 (COLOR_VALUE -> BLUE .)
    SQUAREBRACKET_CLOSE reduce using rule 14 (COLOR_VALUE -> BLUE .)


state 130

    (15) COLOR_VALUE -> YELLOW .

    SEPARATOR       reduce using rule 15 (COLOR_VALUE -> YELLOW .)
    SQUAREBRACKET_CLOSE reduce using rule 15 (COLOR_VALUE -> YELLOW .)


state 131

    (16) COLOR_VALUE -> BLACK .

    SEPARATOR       reduce using rule 16 (COLOR_VALUE -> BLACK .)
    SQUAREBRACKET_CLOSE reduce using rule 16 (COLOR_VALUE -> BLACK .)


state 132

    (17) COLOR_VALUE -> WHITE .

    SEPARATOR       reduce using rule 17 (COLOR_VALUE -> WHITE .)
    SQUAREBRACKET_CLOSE reduce using rule 17 (COLOR_VALUE -> WHITE .)


state 133

    (24) ATTRIBUTE -> WIDTH AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 24 (ATTRIBUTE -> WIDTH AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 24 (ATTRIBUTE -> WIDTH AFFECTATION NUMBER .)


state 134

    (25) ATTRIBUTE -> HEIGHT AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 25 (ATTRIBUTE -> HEIGHT AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 25 (ATTRIBUTE -> HEIGHT AFFECTATION NUMBER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINE_BREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 23 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 23 resolved as shift
WARNING: reduce/reduce conflict in state 31 resolved using rule (INT_EXPRESSION -> VARIABLE)
WARNING: rejected rule (BOOL_EXPRESSION -> VARIABLE) in state 31
WARNING: reduce/reduce conflict in state 57 resolved using rule (INT_EXPRESSION -> VARIABLE)
WARNING: rejected rule (BOOL_EXPRESSION -> VARIABLE) in state 57
