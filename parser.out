Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    FOR
    QUOTE
    SHAPE_TYPE
    ignore

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> STATEMENT
Rule 2     PROGRAM -> STATEMENT LINE_BREAK PROGRAM
Rule 3     PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE
Rule 4     ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE
Rule 5     SHAPE_CONTENT -> CIRCLE_CONTENT
Rule 6     SHAPE_CONTENT -> TRIANGLE_CONTENT
Rule 7     SHAPE_CONTENT -> RECTANGLE_CONTENT
Rule 8     CIRCLE_CONTENT -> CIRCLE DESCRIPTION ATTRIBUTES
Rule 9     TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION ATTRIBUTES
Rule 10    RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION ATTRIBUTES
Rule 11    COLOR_VALUE -> COLOR_HEX
Rule 12    COLOR_VALUE -> RED
Rule 13    COLOR_VALUE -> GREEN
Rule 14    COLOR_VALUE -> BLUE
Rule 15    COLOR_VALUE -> YELLOW
Rule 16    COLOR_VALUE -> BLACK
Rule 17    COLOR_VALUE -> WHITE
Rule 18    ATTRIBUTES -> ATTRIBUTE
Rule 19    ATTRIBUTES -> ATTRIBUTE SEPARATOR ATTRIBUTES
Rule 20    ATTRIBUTE -> RADIUS AFFECTATION NUMBER
Rule 21    ATTRIBUTE -> POSITIONX AFFECTATION NUMBER
Rule 22    ATTRIBUTE -> POSITIONY AFFECTATION NUMBER
Rule 23    ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE
Rule 24    ATTRIBUTE -> WIDTH AFFECTATION NUMBER
Rule 25    ATTRIBUTE -> HEIGHT AFFECTATION NUMBER
Rule 26    VARIABLE -> BOOLEAN VARIABLE_NAME
Rule 27    VARIABLE -> INTEGER VARIABLE_NAME
Rule 28    VARIABLE -> SHAPE VARIABLE_NAME
Rule 29    VALUE -> ABSTRACT_SHAPE
Rule 30    VALUE -> INT_EXPRESSION
Rule 31    VALUE -> BOOL_EXPRESSION
Rule 32    STATEMENT -> DRAW ABSTRACT_SHAPE
Rule 33    STATEMENT -> IF_STATEMENTS
Rule 34    STATEMENT -> WHILE_STATEMENT
Rule 35    INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION
Rule 36    INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
Rule 37    INT_EXPRESSION -> NUMBER
Rule 38    INT_EXPRESSION -> VARIABLE
Rule 39    INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
Rule 40    INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
Rule 41    INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
Rule 42    INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
Rule 43    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION
Rule 44    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION
Rule 45    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
Rule 46    BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
Rule 47    BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION
Rule 48    BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
Rule 49    BOOL_VALUE -> TRUE
Rule 50    BOOL_VALUE -> FALSE
Rule 51    BOOL_EXPRESSION -> BOOL_VALUE
Rule 52    BOOL_EXPRESSION -> VARIABLE
Rule 53    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
Rule 54    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
Rule 55    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
Rule 56    BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
Rule 57    IF_STATEMENTS -> IF_STATEMENT
Rule 58    IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT
Rule 59    IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS
Rule 60    IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
Rule 61    IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
Rule 62    ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT
Rule 63    ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT
Rule 64    ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
Rule 65    ELSE_STATEMENT -> ELSE PROGRAM
Rule 66    WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

Terminals, with rules where they appear

AFFECTATION          : 20 21 22 23 24 25
BLACK                : 16
BLUE                 : 14
BOOLEAN              : 26
BOOL_AND             : 55
BOOL_EQUAL           : 45 53
BOOL_GT              : 44
BOOL_LT              : 43
BOOL_NOT             : 47
BOOL_NOT_EQUAL       : 46 54
BOOL_OR              : 56
BRACE_CLOSE          : 3
BRACE_OPEN           : 3
BRACKET_CLOSE        : 36 48 61 64 66
BRACKET_OPEN         : 36 48 61 64 66
CIRCLE               : 8
COLOR                : 23
COLOR_HEX            : 11
COMMENT              : 
DESCRIPTION          : 8 9 10
DRAW                 : 32
ELSE                 : 65
ELSEIF               : 64
FALSE                : 50
FOR                  : 
GREEN                : 13
HEIGHT               : 25
IF                   : 61
INTEGER              : 27
INTEGER_DIVIDE       : 42
INTEGER_MINUS        : 35 40
INTEGER_PLUS         : 39
INTEGER_TIMES        : 41
LINE_BREAK           : 2
NUMBER               : 20 21 22 24 25 37
POSITIONX            : 21
POSITIONY            : 22
QUOTE                : 
RADIUS               : 20
RECTANGLE            : 10
RED                  : 12
SEPARATOR            : 19
SHAPE                : 28
SHAPE_TYPE           : 
SQUAREBRACKET_CLOSE  : 4
SQUAREBRACKET_OPEN   : 4
TRIANGLE             : 9
TRUE                 : 49
VARIABLE_NAME        : 26 27 28
WHILE                : 66
WHITE                : 17
WIDTH                : 24
YELLOW               : 15
error                : 
ignore               : 

Nonterminals, with rules where they appear

ABSTRACT_SHAPE       : 29 32
ATTRIBUTE            : 18 19
ATTRIBUTES           : 8 9 10 19
BOOL_EXPRESSION      : 31 47 48 53 53 54 54 55 55 56 56 61 64 66
BOOL_VALUE           : 51
CIRCLE_CONTENT       : 5
COLOR_VALUE          : 23
ELSE_IF_STATEMENT    : 62 63
ELSE_IF_STATEMENTS   : 59 60 63
ELSE_STATEMENT       : 58 60
IF_STATEMENT         : 57 58 59 60
IF_STATEMENTS        : 33
INT_EXPRESSION       : 30 35 36 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46
PROGRAM              : 2 3 61 64 65 66 0
RECTANGLE_CONTENT    : 7
SHAPE_CONTENT        : 4
STATEMENT            : 1 2
TRIANGLE_CONTENT     : 6
VALUE                : 
VARIABLE             : 38 52
WHILE_STATEMENT      : 34

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    PROGRAM                        shift and go to state 1
    STATEMENT                      shift and go to state 2
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> STATEMENT .
    (2) PROGRAM -> STATEMENT . LINE_BREAK PROGRAM

  ! shift/reduce conflict for LINE_BREAK resolved as shift
    $end            reduce using rule 1 (PROGRAM -> STATEMENT .)
    BRACE_CLOSE     reduce using rule 1 (PROGRAM -> STATEMENT .)
    ELSE            reduce using rule 1 (PROGRAM -> STATEMENT .)
    ELSEIF          reduce using rule 1 (PROGRAM -> STATEMENT .)
    LINE_BREAK      shift and go to state 10

  ! LINE_BREAK      [ reduce using rule 1 (PROGRAM -> STATEMENT .) ]


state 3

    (3) PROGRAM -> BRACE_OPEN . PROGRAM BRACE_CLOSE
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    PROGRAM                        shift and go to state 11
    STATEMENT                      shift and go to state 2
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 4

    (32) STATEMENT -> DRAW . ABSTRACT_SHAPE
    (4) ABSTRACT_SHAPE -> . SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE

    SQUAREBRACKET_OPEN shift and go to state 13

    ABSTRACT_SHAPE                 shift and go to state 12

state 5

    (33) STATEMENT -> IF_STATEMENTS .

    LINE_BREAK      reduce using rule 33 (STATEMENT -> IF_STATEMENTS .)
    $end            reduce using rule 33 (STATEMENT -> IF_STATEMENTS .)
    BRACE_CLOSE     reduce using rule 33 (STATEMENT -> IF_STATEMENTS .)
    ELSE            reduce using rule 33 (STATEMENT -> IF_STATEMENTS .)
    ELSEIF          reduce using rule 33 (STATEMENT -> IF_STATEMENTS .)


state 6

    (34) STATEMENT -> WHILE_STATEMENT .

    LINE_BREAK      reduce using rule 34 (STATEMENT -> WHILE_STATEMENT .)
    $end            reduce using rule 34 (STATEMENT -> WHILE_STATEMENT .)
    BRACE_CLOSE     reduce using rule 34 (STATEMENT -> WHILE_STATEMENT .)
    ELSE            reduce using rule 34 (STATEMENT -> WHILE_STATEMENT .)
    ELSEIF          reduce using rule 34 (STATEMENT -> WHILE_STATEMENT .)


state 7

    (57) IF_STATEMENTS -> IF_STATEMENT .
    (58) IF_STATEMENTS -> IF_STATEMENT . ELSE_STATEMENT
    (59) IF_STATEMENTS -> IF_STATEMENT . ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> IF_STATEMENT . ELSE_IF_STATEMENTS ELSE_STATEMENT
    (65) ELSE_STATEMENT -> . ELSE PROGRAM
    (62) ELSE_IF_STATEMENTS -> . ELSE_IF_STATEMENT
    (63) ELSE_IF_STATEMENTS -> . ELSE_IF_STATEMENTS ELSE_IF_STATEMENT
    (64) ELSE_IF_STATEMENT -> . ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    LINE_BREAK      reduce using rule 57 (IF_STATEMENTS -> IF_STATEMENT .)
    $end            reduce using rule 57 (IF_STATEMENTS -> IF_STATEMENT .)
    BRACE_CLOSE     reduce using rule 57 (IF_STATEMENTS -> IF_STATEMENT .)
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 18

  ! ELSE            [ reduce using rule 57 (IF_STATEMENTS -> IF_STATEMENT .) ]
  ! ELSEIF          [ reduce using rule 57 (IF_STATEMENTS -> IF_STATEMENT .) ]

    ELSE_STATEMENT                 shift and go to state 14
    ELSE_IF_STATEMENTS             shift and go to state 15
    ELSE_IF_STATEMENT              shift and go to state 17

state 8

    (66) WHILE_STATEMENT -> WHILE . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACKET_OPEN    shift and go to state 19


state 9

    (61) IF_STATEMENT -> IF . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACKET_OPEN    shift and go to state 20


state 10

    (2) PROGRAM -> STATEMENT LINE_BREAK . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    STATEMENT                      shift and go to state 2
    PROGRAM                        shift and go to state 21
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 11

    (3) PROGRAM -> BRACE_OPEN PROGRAM . BRACE_CLOSE

    BRACE_CLOSE     shift and go to state 22


state 12

    (32) STATEMENT -> DRAW ABSTRACT_SHAPE .

    LINE_BREAK      reduce using rule 32 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    $end            reduce using rule 32 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    BRACE_CLOSE     reduce using rule 32 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    ELSE            reduce using rule 32 (STATEMENT -> DRAW ABSTRACT_SHAPE .)
    ELSEIF          reduce using rule 32 (STATEMENT -> DRAW ABSTRACT_SHAPE .)


state 13

    (4) ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN . SHAPE_CONTENT SQUAREBRACKET_CLOSE
    (5) SHAPE_CONTENT -> . CIRCLE_CONTENT
    (6) SHAPE_CONTENT -> . TRIANGLE_CONTENT
    (7) SHAPE_CONTENT -> . RECTANGLE_CONTENT
    (8) CIRCLE_CONTENT -> . CIRCLE DESCRIPTION ATTRIBUTES
    (9) TRIANGLE_CONTENT -> . TRIANGLE DESCRIPTION ATTRIBUTES
    (10) RECTANGLE_CONTENT -> . RECTANGLE DESCRIPTION ATTRIBUTES

    CIRCLE          shift and go to state 27
    TRIANGLE        shift and go to state 28
    RECTANGLE       shift and go to state 29

    SHAPE_CONTENT                  shift and go to state 23
    CIRCLE_CONTENT                 shift and go to state 24
    TRIANGLE_CONTENT               shift and go to state 25
    RECTANGLE_CONTENT              shift and go to state 26

state 14

    (58) IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .

    LINE_BREAK      reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    $end            reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    BRACE_CLOSE     reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    ELSE            reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)
    ELSEIF          reduce using rule 58 (IF_STATEMENTS -> IF_STATEMENT ELSE_STATEMENT .)


state 15

    (59) IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .
    (60) IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS . ELSE_STATEMENT
    (63) ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS . ELSE_IF_STATEMENT
    (65) ELSE_STATEMENT -> . ELSE PROGRAM
    (64) ELSE_IF_STATEMENT -> . ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    LINE_BREAK      reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .)
    $end            reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .)
    BRACE_CLOSE     reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .)
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 18

  ! ELSE            [ reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .) ]
  ! ELSEIF          [ reduce using rule 59 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS .) ]

    ELSE_STATEMENT                 shift and go to state 30
    ELSE_IF_STATEMENT              shift and go to state 31

state 16

    (65) ELSE_STATEMENT -> ELSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    PROGRAM                        shift and go to state 32
    STATEMENT                      shift and go to state 2
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 17

    (62) ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .

    LINE_BREAK      reduce using rule 62 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    $end            reduce using rule 62 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    BRACE_CLOSE     reduce using rule 62 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    ELSE            reduce using rule 62 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)
    ELSEIF          reduce using rule 62 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENT .)


state 18

    (64) ELSE_IF_STATEMENT -> ELSEIF . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACKET_OPEN    shift and go to state 33


state 19

    (66) WHILE_STATEMENT -> WHILE BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 35
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 20

    (61) IF_STATEMENT -> IF BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 47
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 21

    (2) PROGRAM -> STATEMENT LINE_BREAK PROGRAM .

    $end            reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    BRACE_CLOSE     reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    LINE_BREAK      reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    ELSE            reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)
    ELSEIF          reduce using rule 2 (PROGRAM -> STATEMENT LINE_BREAK PROGRAM .)


state 22

    (3) PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .

    $end            reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    BRACE_CLOSE     reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    LINE_BREAK      reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    ELSE            reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)
    ELSEIF          reduce using rule 3 (PROGRAM -> BRACE_OPEN PROGRAM BRACE_CLOSE .)


state 23

    (4) ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT . SQUAREBRACKET_CLOSE

    SQUAREBRACKET_CLOSE shift and go to state 48


state 24

    (5) SHAPE_CONTENT -> CIRCLE_CONTENT .

    SQUAREBRACKET_CLOSE reduce using rule 5 (SHAPE_CONTENT -> CIRCLE_CONTENT .)


state 25

    (6) SHAPE_CONTENT -> TRIANGLE_CONTENT .

    SQUAREBRACKET_CLOSE reduce using rule 6 (SHAPE_CONTENT -> TRIANGLE_CONTENT .)


state 26

    (7) SHAPE_CONTENT -> RECTANGLE_CONTENT .

    SQUAREBRACKET_CLOSE reduce using rule 7 (SHAPE_CONTENT -> RECTANGLE_CONTENT .)


state 27

    (8) CIRCLE_CONTENT -> CIRCLE . DESCRIPTION ATTRIBUTES

    DESCRIPTION     shift and go to state 49


state 28

    (9) TRIANGLE_CONTENT -> TRIANGLE . DESCRIPTION ATTRIBUTES

    DESCRIPTION     shift and go to state 50


state 29

    (10) RECTANGLE_CONTENT -> RECTANGLE . DESCRIPTION ATTRIBUTES

    DESCRIPTION     shift and go to state 51


state 30

    (60) IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .

    LINE_BREAK      reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    $end            reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    BRACE_CLOSE     reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    ELSE            reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)
    ELSEIF          reduce using rule 60 (IF_STATEMENTS -> IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT .)


state 31

    (63) ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .

    LINE_BREAK      reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    $end            reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    BRACE_CLOSE     reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    ELSE            reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)
    ELSEIF          reduce using rule 63 (ELSE_IF_STATEMENTS -> ELSE_IF_STATEMENTS ELSE_IF_STATEMENT .)


state 32

    (65) ELSE_STATEMENT -> ELSE PROGRAM .

    LINE_BREAK      reduce using rule 65 (ELSE_STATEMENT -> ELSE PROGRAM .)
    $end            reduce using rule 65 (ELSE_STATEMENT -> ELSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 65 (ELSE_STATEMENT -> ELSE PROGRAM .)
    ELSE            reduce using rule 65 (ELSE_STATEMENT -> ELSE PROGRAM .)
    ELSEIF          reduce using rule 65 (ELSE_STATEMENT -> ELSE PROGRAM .)


state 33

    (64) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 52
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 34

    (48) BOOL_EXPRESSION -> BRACKET_OPEN . BOOL_EXPRESSION BRACKET_CLOSE
    (36) INT_EXPRESSION -> BRACKET_OPEN . INT_EXPRESSION BRACKET_CLOSE
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 53
    INT_EXPRESSION                 shift and go to state 54
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 35

    (66) WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE PROGRAM
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 55
    BOOL_EQUAL      shift and go to state 56
    BOOL_NOT_EQUAL  shift and go to state 57
    BOOL_AND        shift and go to state 58
    BOOL_OR         shift and go to state 59


state 36

    (43) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_NOT_EQUAL INT_EXPRESSION
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         shift and go to state 60
    BOOL_GT         shift and go to state 61
    BOOL_EQUAL      shift and go to state 62
    BOOL_NOT_EQUAL  shift and go to state 63
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 37

    (47) BOOL_EXPRESSION -> BOOL_NOT . BOOL_EXPRESSION
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 68
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 38

    (51) BOOL_EXPRESSION -> BOOL_VALUE .

    BRACKET_CLOSE   reduce using rule 51 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_EQUAL      reduce using rule 51 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_NOT_EQUAL  reduce using rule 51 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_AND        reduce using rule 51 (BOOL_EXPRESSION -> BOOL_VALUE .)
    BOOL_OR         reduce using rule 51 (BOOL_EXPRESSION -> BOOL_VALUE .)


state 39

    (52) BOOL_EXPRESSION -> VARIABLE .
    (38) INT_EXPRESSION -> VARIABLE .

  ! reduce/reduce conflict for BOOL_EQUAL resolved using rule 38 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BOOL_NOT_EQUAL resolved using rule 38 (INT_EXPRESSION -> VARIABLE .)
  ! reduce/reduce conflict for BRACKET_CLOSE resolved using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_AND        reduce using rule 52 (BOOL_EXPRESSION -> VARIABLE .)
    BOOL_OR         reduce using rule 52 (BOOL_EXPRESSION -> VARIABLE .)
    BOOL_LT         reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_GT         reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_EQUAL      reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_NOT_EQUAL  reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_PLUS    reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_MINUS   reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_TIMES   reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_DIVIDE  reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BRACKET_CLOSE   reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)

  ! BRACKET_CLOSE   [ reduce using rule 52 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BOOL_EQUAL      [ reduce using rule 52 (BOOL_EXPRESSION -> VARIABLE .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 52 (BOOL_EXPRESSION -> VARIABLE .) ]


state 40

    (35) INT_EXPRESSION -> INTEGER_MINUS . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 69
    VARIABLE                       shift and go to state 71

state 41

    (37) INT_EXPRESSION -> NUMBER .

    BOOL_LT         reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    BOOL_GT         reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    BOOL_EQUAL      reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    BOOL_NOT_EQUAL  reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    INTEGER_PLUS    reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    INTEGER_MINUS   reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    INTEGER_TIMES   reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    INTEGER_DIVIDE  reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    BRACKET_CLOSE   reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    BOOL_AND        reduce using rule 37 (INT_EXPRESSION -> NUMBER .)
    BOOL_OR         reduce using rule 37 (INT_EXPRESSION -> NUMBER .)


state 42

    (49) BOOL_VALUE -> TRUE .

    BRACKET_CLOSE   reduce using rule 49 (BOOL_VALUE -> TRUE .)
    BOOL_EQUAL      reduce using rule 49 (BOOL_VALUE -> TRUE .)
    BOOL_NOT_EQUAL  reduce using rule 49 (BOOL_VALUE -> TRUE .)
    BOOL_AND        reduce using rule 49 (BOOL_VALUE -> TRUE .)
    BOOL_OR         reduce using rule 49 (BOOL_VALUE -> TRUE .)


state 43

    (50) BOOL_VALUE -> FALSE .

    BRACKET_CLOSE   reduce using rule 50 (BOOL_VALUE -> FALSE .)
    BOOL_EQUAL      reduce using rule 50 (BOOL_VALUE -> FALSE .)
    BOOL_NOT_EQUAL  reduce using rule 50 (BOOL_VALUE -> FALSE .)
    BOOL_AND        reduce using rule 50 (BOOL_VALUE -> FALSE .)
    BOOL_OR         reduce using rule 50 (BOOL_VALUE -> FALSE .)


state 44

    (26) VARIABLE -> BOOLEAN . VARIABLE_NAME

    VARIABLE_NAME   shift and go to state 72


state 45

    (27) VARIABLE -> INTEGER . VARIABLE_NAME

    VARIABLE_NAME   shift and go to state 73


state 46

    (28) VARIABLE -> SHAPE . VARIABLE_NAME

    VARIABLE_NAME   shift and go to state 74


state 47

    (61) IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE PROGRAM
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 75
    BOOL_EQUAL      shift and go to state 56
    BOOL_NOT_EQUAL  shift and go to state 57
    BOOL_AND        shift and go to state 58
    BOOL_OR         shift and go to state 59


state 48

    (4) ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .

    LINE_BREAK      reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    $end            reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    BRACE_CLOSE     reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    ELSE            reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)
    ELSEIF          reduce using rule 4 (ABSTRACT_SHAPE -> SQUAREBRACKET_OPEN SHAPE_CONTENT SQUAREBRACKET_CLOSE .)


state 49

    (8) CIRCLE_CONTENT -> CIRCLE DESCRIPTION . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE
    (19) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 78
    POSITIONX       shift and go to state 79
    POSITIONY       shift and go to state 80
    COLOR           shift and go to state 81
    WIDTH           shift and go to state 82
    HEIGHT          shift and go to state 83

    ATTRIBUTES                     shift and go to state 76
    ATTRIBUTE                      shift and go to state 77

state 50

    (9) TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE
    (19) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 78
    POSITIONX       shift and go to state 79
    POSITIONY       shift and go to state 80
    COLOR           shift and go to state 81
    WIDTH           shift and go to state 82
    HEIGHT          shift and go to state 83

    ATTRIBUTES                     shift and go to state 84
    ATTRIBUTE                      shift and go to state 77

state 51

    (10) RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE
    (19) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 78
    POSITIONX       shift and go to state 79
    POSITIONY       shift and go to state 80
    COLOR           shift and go to state 81
    WIDTH           shift and go to state 82
    HEIGHT          shift and go to state 83

    ATTRIBUTES                     shift and go to state 85
    ATTRIBUTE                      shift and go to state 77

state 52

    (64) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE PROGRAM
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 86
    BOOL_EQUAL      shift and go to state 56
    BOOL_NOT_EQUAL  shift and go to state 57
    BOOL_AND        shift and go to state 58
    BOOL_OR         shift and go to state 59


state 53

    (48) BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION . BRACKET_CLOSE
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   shift and go to state 87
    BOOL_EQUAL      shift and go to state 56
    BOOL_NOT_EQUAL  shift and go to state 57
    BOOL_AND        shift and go to state 58
    BOOL_OR         shift and go to state 59


state 54

    (36) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION . BRACKET_CLOSE
    (43) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> INT_EXPRESSION . BOOL_NOT_EQUAL INT_EXPRESSION
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   shift and go to state 88
    BOOL_LT         shift and go to state 60
    BOOL_GT         shift and go to state 61
    BOOL_EQUAL      shift and go to state 62
    BOOL_NOT_EQUAL  shift and go to state 63
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 55

    (66) WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    PROGRAM                        shift and go to state 89
    STATEMENT                      shift and go to state 2
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 56

    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL . BOOL_EXPRESSION
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 90
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 57

    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL . BOOL_EXPRESSION
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 91
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 58

    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND . BOOL_EXPRESSION
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 92
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 59

    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR . BOOL_EXPRESSION
    (43) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_LT INT_EXPRESSION
    (44) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_GT INT_EXPRESSION
    (45) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION
    (46) BOOL_EXPRESSION -> . INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION
    (47) BOOL_EXPRESSION -> . BOOL_NOT BOOL_EXPRESSION
    (48) BOOL_EXPRESSION -> . BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE
    (51) BOOL_EXPRESSION -> . BOOL_VALUE
    (52) BOOL_EXPRESSION -> . VARIABLE
    (53) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> . BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (49) BOOL_VALUE -> . TRUE
    (50) BOOL_VALUE -> . FALSE
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    BOOL_NOT        shift and go to state 37
    BRACKET_OPEN    shift and go to state 34
    INTEGER_MINUS   shift and go to state 40
    NUMBER          shift and go to state 41
    TRUE            shift and go to state 42
    FALSE           shift and go to state 43
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    BOOL_EXPRESSION                shift and go to state 93
    INT_EXPRESSION                 shift and go to state 36
    BOOL_VALUE                     shift and go to state 38
    VARIABLE                       shift and go to state 39

state 60

    (43) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 94
    VARIABLE                       shift and go to state 71

state 61

    (44) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 95
    VARIABLE                       shift and go to state 71

state 62

    (45) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 96
    VARIABLE                       shift and go to state 71

state 63

    (46) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 97
    VARIABLE                       shift and go to state 71

state 64

    (39) INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 98
    VARIABLE                       shift and go to state 71

state 65

    (40) INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 99
    VARIABLE                       shift and go to state 71

state 66

    (41) INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 100
    VARIABLE                       shift and go to state 71

state 67

    (42) INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE . INT_EXPRESSION
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 101
    VARIABLE                       shift and go to state 71

state 68

    (47) BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   reduce using rule 47 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 47 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 47 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 47 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 47 (BOOL_EXPRESSION -> BOOL_NOT BOOL_EXPRESSION .)

  ! BOOL_EQUAL      [ shift and go to state 56 ]
  ! BOOL_NOT_EQUAL  [ shift and go to state 57 ]
  ! BOOL_AND        [ shift and go to state 58 ]
  ! BOOL_OR         [ shift and go to state 59 ]


state 69

    (35) INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_GT         reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_PLUS    reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_TIMES   reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_DIVIDE  reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_AND        reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)
    BOOL_OR         reduce using rule 35 (INT_EXPRESSION -> INTEGER_MINUS INT_EXPRESSION .)

  ! INTEGER_PLUS    [ shift and go to state 64 ]
  ! INTEGER_MINUS   [ shift and go to state 65 ]
  ! INTEGER_TIMES   [ shift and go to state 66 ]
  ! INTEGER_DIVIDE  [ shift and go to state 67 ]


state 70

    (36) INT_EXPRESSION -> BRACKET_OPEN . INT_EXPRESSION BRACKET_CLOSE
    (35) INT_EXPRESSION -> . INTEGER_MINUS INT_EXPRESSION
    (36) INT_EXPRESSION -> . BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE
    (37) INT_EXPRESSION -> . NUMBER
    (38) INT_EXPRESSION -> . VARIABLE
    (39) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> . INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION
    (26) VARIABLE -> . BOOLEAN VARIABLE_NAME
    (27) VARIABLE -> . INTEGER VARIABLE_NAME
    (28) VARIABLE -> . SHAPE VARIABLE_NAME

    INTEGER_MINUS   shift and go to state 40
    BRACKET_OPEN    shift and go to state 70
    NUMBER          shift and go to state 41
    BOOLEAN         shift and go to state 44
    INTEGER         shift and go to state 45
    SHAPE           shift and go to state 46

    INT_EXPRESSION                 shift and go to state 102
    VARIABLE                       shift and go to state 71

state 71

    (38) INT_EXPRESSION -> VARIABLE .

    INTEGER_PLUS    reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_MINUS   reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_TIMES   reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    INTEGER_DIVIDE  reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_LT         reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_GT         reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_EQUAL      reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_NOT_EQUAL  reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BRACKET_CLOSE   reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_AND        reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)
    BOOL_OR         reduce using rule 38 (INT_EXPRESSION -> VARIABLE .)


state 72

    (26) VARIABLE -> BOOLEAN VARIABLE_NAME .

    BRACKET_CLOSE   reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_EQUAL      reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_NOT_EQUAL  reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_AND        reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_OR         reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_LT         reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    BOOL_GT         reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_PLUS    reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_MINUS   reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_TIMES   reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)
    INTEGER_DIVIDE  reduce using rule 26 (VARIABLE -> BOOLEAN VARIABLE_NAME .)


state 73

    (27) VARIABLE -> INTEGER VARIABLE_NAME .

    BRACKET_CLOSE   reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_EQUAL      reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_NOT_EQUAL  reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_AND        reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_OR         reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_LT         reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    BOOL_GT         reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_PLUS    reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_MINUS   reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_TIMES   reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)
    INTEGER_DIVIDE  reduce using rule 27 (VARIABLE -> INTEGER VARIABLE_NAME .)


state 74

    (28) VARIABLE -> SHAPE VARIABLE_NAME .

    BRACKET_CLOSE   reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_EQUAL      reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_NOT_EQUAL  reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_AND        reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_OR         reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_LT         reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    BOOL_GT         reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_PLUS    reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_MINUS   reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_TIMES   reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)
    INTEGER_DIVIDE  reduce using rule 28 (VARIABLE -> SHAPE VARIABLE_NAME .)


state 75

    (61) IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    PROGRAM                        shift and go to state 103
    STATEMENT                      shift and go to state 2
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 76

    (8) CIRCLE_CONTENT -> CIRCLE DESCRIPTION ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 8 (CIRCLE_CONTENT -> CIRCLE DESCRIPTION ATTRIBUTES .)


state 77

    (18) ATTRIBUTES -> ATTRIBUTE .
    (19) ATTRIBUTES -> ATTRIBUTE . SEPARATOR ATTRIBUTES

    SQUAREBRACKET_CLOSE reduce using rule 18 (ATTRIBUTES -> ATTRIBUTE .)
    SEPARATOR       shift and go to state 104


state 78

    (20) ATTRIBUTE -> RADIUS . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 105


state 79

    (21) ATTRIBUTE -> POSITIONX . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 106


state 80

    (22) ATTRIBUTE -> POSITIONY . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 107


state 81

    (23) ATTRIBUTE -> COLOR . AFFECTATION COLOR_VALUE

    AFFECTATION     shift and go to state 108


state 82

    (24) ATTRIBUTE -> WIDTH . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 109


state 83

    (25) ATTRIBUTE -> HEIGHT . AFFECTATION NUMBER

    AFFECTATION     shift and go to state 110


state 84

    (9) TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 9 (TRIANGLE_CONTENT -> TRIANGLE DESCRIPTION ATTRIBUTES .)


state 85

    (10) RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 10 (RECTANGLE_CONTENT -> RECTANGLE DESCRIPTION ATTRIBUTES .)


state 86

    (64) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE . PROGRAM
    (1) PROGRAM -> . STATEMENT
    (2) PROGRAM -> . STATEMENT LINE_BREAK PROGRAM
    (3) PROGRAM -> . BRACE_OPEN PROGRAM BRACE_CLOSE
    (32) STATEMENT -> . DRAW ABSTRACT_SHAPE
    (33) STATEMENT -> . IF_STATEMENTS
    (34) STATEMENT -> . WHILE_STATEMENT
    (57) IF_STATEMENTS -> . IF_STATEMENT
    (58) IF_STATEMENTS -> . IF_STATEMENT ELSE_STATEMENT
    (59) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS
    (60) IF_STATEMENTS -> . IF_STATEMENT ELSE_IF_STATEMENTS ELSE_STATEMENT
    (66) WHILE_STATEMENT -> . WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM
    (61) IF_STATEMENT -> . IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM

    BRACE_OPEN      shift and go to state 3
    DRAW            shift and go to state 4
    WHILE           shift and go to state 8
    IF              shift and go to state 9

    PROGRAM                        shift and go to state 111
    STATEMENT                      shift and go to state 2
    IF_STATEMENTS                  shift and go to state 5
    WHILE_STATEMENT                shift and go to state 6
    IF_STATEMENT                   shift and go to state 7

state 87

    (48) BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .

    BRACKET_CLOSE   reduce using rule 48 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_EQUAL      reduce using rule 48 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_NOT_EQUAL  reduce using rule 48 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_AND        reduce using rule 48 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)
    BOOL_OR         reduce using rule 48 (BOOL_EXPRESSION -> BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE .)


state 88

    (36) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .

    BOOL_LT         reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_GT         reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_EQUAL      reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_NOT_EQUAL  reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_PLUS    reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_MINUS   reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_TIMES   reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    INTEGER_DIVIDE  reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BRACKET_CLOSE   reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_AND        reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)
    BOOL_OR         reduce using rule 36 (INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION BRACKET_CLOSE .)


state 89

    (66) WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .

    LINE_BREAK      reduce using rule 66 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    $end            reduce using rule 66 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 66 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSE            reduce using rule 66 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSEIF          reduce using rule 66 (WHILE_STATEMENT -> WHILE BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)


state 90

    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   reduce using rule 53 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 53 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 53 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 53 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .)
    BOOL_NOT_EQUAL  shift and go to state 57

  ! BOOL_NOT_EQUAL  [ reduce using rule 53 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_EQUAL BOOL_EXPRESSION .) ]
  ! BOOL_EQUAL      [ shift and go to state 56 ]
  ! BOOL_AND        [ shift and go to state 58 ]
  ! BOOL_OR         [ shift and go to state 59 ]


state 91

    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 54 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_NOT_EQUAL BOOL_EXPRESSION .)

  ! BOOL_EQUAL      [ shift and go to state 56 ]
  ! BOOL_NOT_EQUAL  [ shift and go to state 57 ]
  ! BOOL_AND        [ shift and go to state 58 ]
  ! BOOL_OR         [ shift and go to state 59 ]


state 92

    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BOOL_AND        reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .)
    BOOL_EQUAL      shift and go to state 56
    BOOL_NOT_EQUAL  shift and go to state 57

  ! BOOL_EQUAL      [ reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 55 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_AND BOOL_EXPRESSION .) ]
  ! BOOL_AND        [ shift and go to state 58 ]
  ! BOOL_OR         [ shift and go to state 59 ]


state 93

    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .
    (53) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_EQUAL BOOL_EXPRESSION
    (54) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_NOT_EQUAL BOOL_EXPRESSION
    (55) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_AND BOOL_EXPRESSION
    (56) BOOL_EXPRESSION -> BOOL_EXPRESSION . BOOL_OR BOOL_EXPRESSION

    BRACKET_CLOSE   reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    BOOL_OR         reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .)
    BOOL_EQUAL      shift and go to state 56
    BOOL_NOT_EQUAL  shift and go to state 57
    BOOL_AND        shift and go to state 58

  ! BOOL_EQUAL      [ reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .) ]
  ! BOOL_NOT_EQUAL  [ reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .) ]
  ! BOOL_AND        [ reduce using rule 56 (BOOL_EXPRESSION -> BOOL_EXPRESSION BOOL_OR BOOL_EXPRESSION .) ]
  ! BOOL_OR         [ shift and go to state 59 ]


state 94

    (43) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   reduce using rule 43 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 43 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 43 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_AND        reduce using rule 43 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    BOOL_OR         reduce using rule 43 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_LT INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 95

    (44) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_AND        reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    BOOL_OR         reduce using rule 44 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_GT INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 96

    (45) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_AND        reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    BOOL_OR         reduce using rule 45 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_EQUAL INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 97

    (46) BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_AND        reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    BOOL_OR         reduce using rule 46 (BOOL_EXPRESSION -> INT_EXPRESSION BOOL_NOT_EQUAL INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 98

    (39) INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_GT         reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    INTEGER_PLUS    reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_AND        reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    BOOL_OR         reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .)
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67

  ! INTEGER_TIMES   [ reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 39 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_PLUS INT_EXPRESSION .) ]
  ! INTEGER_PLUS    [ shift and go to state 64 ]
  ! INTEGER_MINUS   [ shift and go to state 65 ]


state 99

    (40) INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_GT         reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_AND        reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    BOOL_OR         reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .)
    INTEGER_PLUS    shift and go to state 64
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67

  ! INTEGER_PLUS    [ reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .) ]
  ! INTEGER_TIMES   [ reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .) ]
  ! INTEGER_DIVIDE  [ reduce using rule 40 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_MINUS INT_EXPRESSION .) ]
  ! INTEGER_MINUS   [ shift and go to state 65 ]


state 100

    (41) INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_GT         reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_PLUS    reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_TIMES   reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    INTEGER_DIVIDE  reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_AND        reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)
    BOOL_OR         reduce using rule 41 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_TIMES INT_EXPRESSION .)

  ! INTEGER_PLUS    [ shift and go to state 64 ]
  ! INTEGER_MINUS   [ shift and go to state 65 ]
  ! INTEGER_TIMES   [ shift and go to state 66 ]
  ! INTEGER_DIVIDE  [ shift and go to state 67 ]


state 101

    (42) INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BOOL_LT         reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_GT         reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_EQUAL      reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_NOT_EQUAL  reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_PLUS    reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_MINUS   reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_DIVIDE  reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BRACKET_CLOSE   reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_AND        reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    BOOL_OR         reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .)
    INTEGER_TIMES   shift and go to state 66

  ! INTEGER_TIMES   [ reduce using rule 42 (INT_EXPRESSION -> INT_EXPRESSION INTEGER_DIVIDE INT_EXPRESSION .) ]
  ! INTEGER_PLUS    [ shift and go to state 64 ]
  ! INTEGER_MINUS   [ shift and go to state 65 ]
  ! INTEGER_DIVIDE  [ shift and go to state 67 ]


state 102

    (36) INT_EXPRESSION -> BRACKET_OPEN INT_EXPRESSION . BRACKET_CLOSE
    (39) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_PLUS INT_EXPRESSION
    (40) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_MINUS INT_EXPRESSION
    (41) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_TIMES INT_EXPRESSION
    (42) INT_EXPRESSION -> INT_EXPRESSION . INTEGER_DIVIDE INT_EXPRESSION

    BRACKET_CLOSE   shift and go to state 88
    INTEGER_PLUS    shift and go to state 64
    INTEGER_MINUS   shift and go to state 65
    INTEGER_TIMES   shift and go to state 66
    INTEGER_DIVIDE  shift and go to state 67


state 103

    (61) IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .

    ELSE            reduce using rule 61 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSEIF          reduce using rule 61 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    LINE_BREAK      reduce using rule 61 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    $end            reduce using rule 61 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 61 (IF_STATEMENT -> IF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)


state 104

    (19) ATTRIBUTES -> ATTRIBUTE SEPARATOR . ATTRIBUTES
    (18) ATTRIBUTES -> . ATTRIBUTE
    (19) ATTRIBUTES -> . ATTRIBUTE SEPARATOR ATTRIBUTES
    (20) ATTRIBUTE -> . RADIUS AFFECTATION NUMBER
    (21) ATTRIBUTE -> . POSITIONX AFFECTATION NUMBER
    (22) ATTRIBUTE -> . POSITIONY AFFECTATION NUMBER
    (23) ATTRIBUTE -> . COLOR AFFECTATION COLOR_VALUE
    (24) ATTRIBUTE -> . WIDTH AFFECTATION NUMBER
    (25) ATTRIBUTE -> . HEIGHT AFFECTATION NUMBER

    RADIUS          shift and go to state 78
    POSITIONX       shift and go to state 79
    POSITIONY       shift and go to state 80
    COLOR           shift and go to state 81
    WIDTH           shift and go to state 82
    HEIGHT          shift and go to state 83

    ATTRIBUTE                      shift and go to state 77
    ATTRIBUTES                     shift and go to state 112

state 105

    (20) ATTRIBUTE -> RADIUS AFFECTATION . NUMBER

    NUMBER          shift and go to state 113


state 106

    (21) ATTRIBUTE -> POSITIONX AFFECTATION . NUMBER

    NUMBER          shift and go to state 114


state 107

    (22) ATTRIBUTE -> POSITIONY AFFECTATION . NUMBER

    NUMBER          shift and go to state 115


state 108

    (23) ATTRIBUTE -> COLOR AFFECTATION . COLOR_VALUE
    (11) COLOR_VALUE -> . COLOR_HEX
    (12) COLOR_VALUE -> . RED
    (13) COLOR_VALUE -> . GREEN
    (14) COLOR_VALUE -> . BLUE
    (15) COLOR_VALUE -> . YELLOW
    (16) COLOR_VALUE -> . BLACK
    (17) COLOR_VALUE -> . WHITE

    COLOR_HEX       shift and go to state 117
    RED             shift and go to state 118
    GREEN           shift and go to state 119
    BLUE            shift and go to state 120
    YELLOW          shift and go to state 121
    BLACK           shift and go to state 122
    WHITE           shift and go to state 123

    COLOR_VALUE                    shift and go to state 116

state 109

    (24) ATTRIBUTE -> WIDTH AFFECTATION . NUMBER

    NUMBER          shift and go to state 124


state 110

    (25) ATTRIBUTE -> HEIGHT AFFECTATION . NUMBER

    NUMBER          shift and go to state 125


state 111

    (64) ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .

    LINE_BREAK      reduce using rule 64 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    $end            reduce using rule 64 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    BRACE_CLOSE     reduce using rule 64 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSE            reduce using rule 64 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)
    ELSEIF          reduce using rule 64 (ELSE_IF_STATEMENT -> ELSEIF BRACKET_OPEN BOOL_EXPRESSION BRACKET_CLOSE PROGRAM .)


state 112

    (19) ATTRIBUTES -> ATTRIBUTE SEPARATOR ATTRIBUTES .

    SQUAREBRACKET_CLOSE reduce using rule 19 (ATTRIBUTES -> ATTRIBUTE SEPARATOR ATTRIBUTES .)


state 113

    (20) ATTRIBUTE -> RADIUS AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 20 (ATTRIBUTE -> RADIUS AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 20 (ATTRIBUTE -> RADIUS AFFECTATION NUMBER .)


state 114

    (21) ATTRIBUTE -> POSITIONX AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 21 (ATTRIBUTE -> POSITIONX AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 21 (ATTRIBUTE -> POSITIONX AFFECTATION NUMBER .)


state 115

    (22) ATTRIBUTE -> POSITIONY AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 22 (ATTRIBUTE -> POSITIONY AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 22 (ATTRIBUTE -> POSITIONY AFFECTATION NUMBER .)


state 116

    (23) ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE .

    SEPARATOR       reduce using rule 23 (ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE .)
    SQUAREBRACKET_CLOSE reduce using rule 23 (ATTRIBUTE -> COLOR AFFECTATION COLOR_VALUE .)


state 117

    (11) COLOR_VALUE -> COLOR_HEX .

    SEPARATOR       reduce using rule 11 (COLOR_VALUE -> COLOR_HEX .)
    SQUAREBRACKET_CLOSE reduce using rule 11 (COLOR_VALUE -> COLOR_HEX .)


state 118

    (12) COLOR_VALUE -> RED .

    SEPARATOR       reduce using rule 12 (COLOR_VALUE -> RED .)
    SQUAREBRACKET_CLOSE reduce using rule 12 (COLOR_VALUE -> RED .)


state 119

    (13) COLOR_VALUE -> GREEN .

    SEPARATOR       reduce using rule 13 (COLOR_VALUE -> GREEN .)
    SQUAREBRACKET_CLOSE reduce using rule 13 (COLOR_VALUE -> GREEN .)


state 120

    (14) COLOR_VALUE -> BLUE .

    SEPARATOR       reduce using rule 14 (COLOR_VALUE -> BLUE .)
    SQUAREBRACKET_CLOSE reduce using rule 14 (COLOR_VALUE -> BLUE .)


state 121

    (15) COLOR_VALUE -> YELLOW .

    SEPARATOR       reduce using rule 15 (COLOR_VALUE -> YELLOW .)
    SQUAREBRACKET_CLOSE reduce using rule 15 (COLOR_VALUE -> YELLOW .)


state 122

    (16) COLOR_VALUE -> BLACK .

    SEPARATOR       reduce using rule 16 (COLOR_VALUE -> BLACK .)
    SQUAREBRACKET_CLOSE reduce using rule 16 (COLOR_VALUE -> BLACK .)


state 123

    (17) COLOR_VALUE -> WHITE .

    SEPARATOR       reduce using rule 17 (COLOR_VALUE -> WHITE .)
    SQUAREBRACKET_CLOSE reduce using rule 17 (COLOR_VALUE -> WHITE .)


state 124

    (24) ATTRIBUTE -> WIDTH AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 24 (ATTRIBUTE -> WIDTH AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 24 (ATTRIBUTE -> WIDTH AFFECTATION NUMBER .)


state 125

    (25) ATTRIBUTE -> HEIGHT AFFECTATION NUMBER .

    SEPARATOR       reduce using rule 25 (ATTRIBUTE -> HEIGHT AFFECTATION NUMBER .)
    SQUAREBRACKET_CLOSE reduce using rule 25 (ATTRIBUTE -> HEIGHT AFFECTATION NUMBER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LINE_BREAK in state 2 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 7 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 7 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 15 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 15 resolved as shift
WARNING: reduce/reduce conflict in state 39 resolved using rule (INT_EXPRESSION -> VARIABLE)
WARNING: rejected rule (BOOL_EXPRESSION -> VARIABLE) in state 39
